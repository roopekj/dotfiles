set $mod Mod4
font pango:monospace 7

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork --ignore-empty-password -t -i $HOME/dotfiles/img/bg.png

# Turn off screensaver
exec --no-startup-id xset s off

# nm-applet is a DE-independent system tray GUI for NetworkManager.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Don't focus window by placing cursor on it
focus_follows_mouse no

# Secret sauce
gaps inner 5
gaps outer 5
smart_gaps on
for_window [floating] resize set 800 800
for_window [floating] move position center
floating_minimum_size -1 x -1

# Start a terminal
bindsym $mod+Return exec kitty

# Kill focused window
bindsym $mod+q kill

# Start dmenu
bindsym $mod+space exec dmenu_run

# Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Same as above but with arrow keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Same as above but with arrow keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Split in horizontal orientation
bindsym $mod+c split h

# Split in vertical orientation
bindsym $mod+v split v

# Enter fullscreen mode for the focused container
bindsym $mod+z fullscreen toggle

# Change container layout between stacked, tabbed and toggle split
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Toggle tiling / floating
bindsym $mod+shift+space floating toggle

# Change focus between tiling / floating windows
# bindsym $mod+Shift+space focus mode_toggle

# Focus the parent container
# bindsym $mod+a focus parent

# Focus the child container
# bindsym $mod+d focus child

# Name workspaces and define variables to be used later
set $ws1 "1: Browser"
set $ws2 "2: Terminal"
set $ws3 "3: Editors"
set $ws4 "4: Messages"
set $ws5 "5: Music"
set $ws6 "6: File viewer"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace
bindsym $mod+Shift+r restart

# Exit i3
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Resize window with keyboard
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym odiaeresis resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Status bar
bar {
        status_command i3status
        
        colors {
                statusline #2e9ef4
                separator #cccccc
        }
}

# Suspend
bindsym $mod+Shift+period exec loginctl lock-session
bindsym $mod+Shift+comma exec systemctl suspend

# Define which workspace common applications will use
assign [class="firefox"] $ws1
assign [class="Chromium"] $ws1
assign [class="kitty"] $ws2
assign [class="code"] $ws3
assign [class="discord"] $ws4
assign [class="TelegramDesktop"] $ws4
assign [class="Spotify"] $ws5
assign [class="krusader"] $ws6

# Define which screen each workspace will use (`xrandr` to get names of monitors)
workspace $ws1 output DP-2
workspace $ws2 output DP-2
workspace $ws3 output DP-2
workspace $ws4 output HDMI-0
workspace $ws5 output HDMI-0
workspace $ws6 output HDMI-0

# Set background
exec_always feh --bg-fill ~/dotfiles/img/bg.png

# Start default applications
exec firefox
exec kitty
exec code
exec discord
exec spotify
exec krusader

# Focus every time a new window is created through dmenu even if it does not request it
for_window [class=.*] focus

# Screen resolutions and placement
exec --no-startup-id "sh $HOME/dotfiles/scripts/switch_monitors.sh"

# Screen brightness
bindsym XF86MonBrightnessDown exec brightnessctl --min-val=10% set 10%-
bindsym XF86MonBrightnessUp exec brightnessctl set +10%

# Move workspaces between windows
bindsym $mod+shift+a move workspace to output left
bindsym $mod+shift+s move workspace to output right

# Reloading connected monitors
bindsym $mod+p exec --no-startup-id "sh $HOME/dotfiles/scripts/switch_monitors.sh"

# PrtSc = fullscreen screenshot, Ctrl+PrtSc = active window screenshot, Shift+PrtSc = selection screenshot
# Screenshots (filesystem)
bindsym Print exec --no-startup-id maim "$HOME/Pictures/screenshot_$(date +'%Y-%m-%d_%H-%M-%S').png"
bindsym Ctrl+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "$HOME/Pictures/screenshot_$(date +'%Y-%m-%d_%H-%M-%S').png"
bindsym Shift+Print exec --no-startup-id maim --select "$HOME/Pictures/screenshot_$(date +'%Y-%m-%d_%H-%M-%S').png"

# Adding super saves screenshots to clipboard
# Screenshots (clipboard)
bindsym $mod+Print exec --no-startup-id maim |xclip -selection clipboard -t image/png
bindsym $mod+Ctrl+Print exec --no-startup-id maim --window $(xdotool getactivewindow) |xclip -selection clipboard -t image/png
bindsym $mod+Shift+Print exec --no-startup-id maim --select |xclip -selection clipboard -t image/png

